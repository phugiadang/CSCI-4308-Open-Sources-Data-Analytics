{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Schema for Vega-Lite specification",
    "type": "object",
    "required": [
        "mark",
        "encoding"
    ],
    "properties": {
        "name": {
            "type": "string",
            "description": "A name for the specification. The name is used to annotate marks, scale names, and more."
        },
        "description": {
            "type": "string"
        },
        "data": {
            "type": "object",
            "properties": {
                "formatType": {
                    "type": "string",
                    "enum": [
                        "json",
                        "csv",
                        "tsv"
                    ],
                    "default": "json"
                },
                "url": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "description": "Pass array of objects instead of a url to a file.",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "transform": {
            "type": "object",
            "properties": {
                "filterNull": {
                    "type": "boolean",
                    "description": "Filter null values from the data. If set to true, all rows with null values are filtered. If false, no rows are filtered. Set the property to undefined to filter only quantitative and temporal fields."
                },
                "filter": {
                    "type": "string",
                    "description": "A string containing the filter Vega expression. Use `datum` to refer to the current data object."
                },
                "calculate": {
                    "type": "array",
                    "description": "Calculate new field(s) using the provided expresssion(s). Calculation are applied before filter.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "field": {
                                "type": "string",
                                "description": "The field in which to store the computed formula value."
                            },
                            "expr": {
                                "type": "string",
                                "description": "A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object."
                            }
                        }
                    }
                }
            }
        },
        "mark": {
            "type": "string",
            "enum": [
                "point",
                "tick",
                "bar",
                "line",
                "area",
                "circle",
                "square",
                "text"
            ]
        },
        "encoding": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 21
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).",
                                    "default": 1
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                }
                            }
                        },
                        "axis": {
                            "type": "object",
                            "properties": {
                                "format": {
                                    "type": "string",
                                    "description": "The formatting pattern for axis labels. If undefined, a good format is automatically determined. Vega-Lite uses D3's format pattern and automatically switches to datetime formatters."
                                },
                                "grid": {
                                    "type": "boolean",
                                    "description": "A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise."
                                },
                                "layer": {
                                    "type": "string",
                                    "description": "A string indicating if the axis (and any gridlines) should be placed above or below the data marks."
                                },
                                "offset": {
                                    "type": "number",
                                    "description": "The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle."
                                },
                                "orient": {
                                    "type": "string",
                                    "enum": [
                                        "top",
                                        "right",
                                        "left",
                                        "bottom"
                                    ],
                                    "description": "The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart)."
                                },
                                "subdivide": {
                                    "type": "number",
                                    "description": "If provided, sets the number of minor ticks between major ticks (the value 9 results in decimal subdivision). Only applicable for axes visualizing quantitative scales."
                                },
                                "ticks": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range."
                                },
                                "tickPadding": {
                                    "type": "integer",
                                    "description": "The padding, in pixels, between ticks and text labels."
                                },
                                "tickSize": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major, minor and end ticks."
                                },
                                "tickSizeMajor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major ticks."
                                },
                                "tickSizeMinor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of minor ticks."
                                },
                                "tickSizeEnd": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of end ticks."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A title for the axis. (Shows field name and its function by default.)"
                                },
                                "titleOffset": {
                                    "type": "integer",
                                    "description": "A title offset value for the axis."
                                },
                                "values": {
                                    "type": "array"
                                },
                                "properties": {
                                    "type": "object",
                                    "description": "Optional mark property definitions for custom axis styling."
                                },
                                "characterWidth": {
                                    "type": "integer",
                                    "default": 6,
                                    "description": "Character width for automatically determining title max length."
                                },
                                "labelMaxLength": {
                                    "type": "integer",
                                    "default": 25,
                                    "minimum": 1,
                                    "description": "Truncate labels that are too long."
                                },
                                "labels": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Enable or disable labels."
                                },
                                "shortTimeLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Whether month and day names should be abbreviated."
                                },
                                "titleMaxLength": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Max length for axis title if the title is automatically generated from the field's description.By default, this is automatically based on cell size and characterWidth property."
                                }
                            }
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "required": [
                        "field",
                        "type"
                    ]
                },
                "y": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 21
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).",
                                    "default": 1
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                }
                            }
                        },
                        "axis": {
                            "type": "object",
                            "properties": {
                                "format": {
                                    "type": "string",
                                    "description": "The formatting pattern for axis labels. If undefined, a good format is automatically determined. Vega-Lite uses D3's format pattern and automatically switches to datetime formatters."
                                },
                                "grid": {
                                    "type": "boolean",
                                    "description": "A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise."
                                },
                                "layer": {
                                    "type": "string",
                                    "description": "A string indicating if the axis (and any gridlines) should be placed above or below the data marks."
                                },
                                "offset": {
                                    "type": "number",
                                    "description": "The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle."
                                },
                                "orient": {
                                    "type": "string",
                                    "enum": [
                                        "top",
                                        "right",
                                        "left",
                                        "bottom"
                                    ],
                                    "description": "The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart)."
                                },
                                "subdivide": {
                                    "type": "number",
                                    "description": "If provided, sets the number of minor ticks between major ticks (the value 9 results in decimal subdivision). Only applicable for axes visualizing quantitative scales."
                                },
                                "ticks": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range."
                                },
                                "tickPadding": {
                                    "type": "integer",
                                    "description": "The padding, in pixels, between ticks and text labels."
                                },
                                "tickSize": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major, minor and end ticks."
                                },
                                "tickSizeMajor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major ticks."
                                },
                                "tickSizeMinor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of minor ticks."
                                },
                                "tickSizeEnd": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of end ticks."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A title for the axis. (Shows field name and its function by default.)"
                                },
                                "titleOffset": {
                                    "type": "integer",
                                    "description": "A title offset value for the axis."
                                },
                                "values": {
                                    "type": "array"
                                },
                                "properties": {
                                    "type": "object",
                                    "description": "Optional mark property definitions for custom axis styling."
                                },
                                "characterWidth": {
                                    "type": "integer",
                                    "default": 6,
                                    "description": "Character width for automatically determining title max length."
                                },
                                "labelMaxLength": {
                                    "type": "integer",
                                    "default": 25,
                                    "minimum": 1,
                                    "description": "Truncate labels that are too long."
                                },
                                "labels": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Enable or disable labels."
                                },
                                "shortTimeLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Whether month and day names should be abbreviated."
                                },
                                "titleMaxLength": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Max length for axis title if the title is automatically generated from the field's description.By default, this is automatically based on cell size and characterWidth property."
                                }
                            }
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "required": [
                        "field",
                        "type"
                    ]
                },
                "row": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                }
                            }
                        },
                        "axis": {
                            "type": "object",
                            "properties": {
                                "format": {
                                    "type": "string",
                                    "description": "The formatting pattern for axis labels. If undefined, a good format is automatically determined. Vega-Lite uses D3's format pattern and automatically switches to datetime formatters."
                                },
                                "grid": {
                                    "type": "boolean",
                                    "description": "A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise."
                                },
                                "layer": {
                                    "type": "string",
                                    "description": "A string indicating if the axis (and any gridlines) should be placed above or below the data marks."
                                },
                                "offset": {
                                    "type": "number",
                                    "description": "The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle."
                                },
                                "orient": {
                                    "type": "string",
                                    "enum": [
                                        "top",
                                        "right",
                                        "left",
                                        "bottom"
                                    ],
                                    "description": "The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart)."
                                },
                                "subdivide": {
                                    "type": "number",
                                    "description": "If provided, sets the number of minor ticks between major ticks (the value 9 results in decimal subdivision). Only applicable for axes visualizing quantitative scales."
                                },
                                "ticks": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range."
                                },
                                "tickPadding": {
                                    "type": "integer",
                                    "description": "The padding, in pixels, between ticks and text labels."
                                },
                                "tickSize": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major, minor and end ticks."
                                },
                                "tickSizeMajor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major ticks."
                                },
                                "tickSizeMinor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of minor ticks."
                                },
                                "tickSizeEnd": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of end ticks."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A title for the axis. (Shows field name and its function by default.)"
                                },
                                "titleOffset": {
                                    "type": "integer",
                                    "description": "A title offset value for the axis."
                                },
                                "values": {
                                    "type": "array"
                                },
                                "properties": {
                                    "type": "object",
                                    "description": "Optional mark property definitions for custom axis styling."
                                },
                                "characterWidth": {
                                    "type": "integer",
                                    "default": 6,
                                    "description": "Character width for automatically determining title max length."
                                },
                                "labelMaxLength": {
                                    "type": "integer",
                                    "default": 25,
                                    "minimum": 1,
                                    "description": "Truncate labels that are too long."
                                },
                                "labels": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Enable or disable labels."
                                },
                                "shortTimeLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Whether month and day names should be abbreviated."
                                },
                                "titleMaxLength": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Max length for axis title if the title is automatically generated from the field's description.By default, this is automatically based on cell size and characterWidth property."
                                }
                            }
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "required": [
                        "field",
                        "type"
                    ]
                },
                "column": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                }
                            }
                        },
                        "axis": {
                            "type": "object",
                            "properties": {
                                "format": {
                                    "type": "string",
                                    "description": "The formatting pattern for axis labels. If undefined, a good format is automatically determined. Vega-Lite uses D3's format pattern and automatically switches to datetime formatters."
                                },
                                "grid": {
                                    "type": "boolean",
                                    "description": "A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise."
                                },
                                "layer": {
                                    "type": "string",
                                    "description": "A string indicating if the axis (and any gridlines) should be placed above or below the data marks."
                                },
                                "offset": {
                                    "type": "number",
                                    "description": "The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle."
                                },
                                "orient": {
                                    "type": "string",
                                    "enum": [
                                        "top",
                                        "right",
                                        "left",
                                        "bottom"
                                    ],
                                    "description": "The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart)."
                                },
                                "subdivide": {
                                    "type": "number",
                                    "description": "If provided, sets the number of minor ticks between major ticks (the value 9 results in decimal subdivision). Only applicable for axes visualizing quantitative scales."
                                },
                                "ticks": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range."
                                },
                                "tickPadding": {
                                    "type": "integer",
                                    "description": "The padding, in pixels, between ticks and text labels."
                                },
                                "tickSize": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major, minor and end ticks."
                                },
                                "tickSizeMajor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of major ticks."
                                },
                                "tickSizeMinor": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of minor ticks."
                                },
                                "tickSizeEnd": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The size, in pixels, of end ticks."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A title for the axis. (Shows field name and its function by default.)"
                                },
                                "titleOffset": {
                                    "type": "integer",
                                    "description": "A title offset value for the axis."
                                },
                                "values": {
                                    "type": "array"
                                },
                                "properties": {
                                    "type": "object",
                                    "description": "Optional mark property definitions for custom axis styling."
                                },
                                "characterWidth": {
                                    "type": "integer",
                                    "default": 6,
                                    "description": "Character width for automatically determining title max length."
                                },
                                "labelMaxLength": {
                                    "type": "integer",
                                    "default": 25,
                                    "minimum": 1,
                                    "description": "Truncate labels that are too long."
                                },
                                "labels": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Enable or disable labels."
                                },
                                "shortTimeLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Whether month and day names should be abbreviated."
                                },
                                "titleMaxLength": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Max length for axis title if the title is automatically generated from the field's description.By default, this is automatically based on cell size and characterWidth property."
                                }
                            }
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "required": [
                        "field",
                        "type"
                    ]
                },
                "size": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                }
                            }
                        },
                        "legend": {
                            "default": true,
                            "description": "Properties of a legend or boolean flag for determining whether to show it.",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "orient": {
                                            "type": "string",
                                            "description": "The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\"."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A title for the legend. (Shows field name and its function by default.)"
                                        },
                                        "format": {
                                            "type": "string",
                                            "description": "An optional formatting pattern for legend labels. Vega uses D3's format pattern."
                                        },
                                        "values": {
                                            "type": "array",
                                            "description": "Explicitly set the visible legend values."
                                        },
                                        "properties": {
                                            "type": "object",
                                            "description": "Optional mark property definitions for custom legend styling. "
                                        },
                                        "shortTimeLabels": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether month names and weekday names should be abbreviated."
                                        }
                                    }
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Size of marks. By default, this is 30 for point, square, and circle, and 10 for text."
                        }
                    }
                },
                "color": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                },
                                "quantitativeRange": {
                                    "type": "array",
                                    "default": [
                                        "#AFC6A3",
                                        "#09622A"
                                    ],
                                    "description": "Color range to encode quantitative variables.",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                        "type": "string",
                                        "role": "color"
                                    }
                                }
                            }
                        },
                        "legend": {
                            "default": true,
                            "description": "Properties of a legend or boolean flag for determining whether to show it.",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "orient": {
                                            "type": "string",
                                            "description": "The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\"."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A title for the legend. (Shows field name and its function by default.)"
                                        },
                                        "format": {
                                            "type": "string",
                                            "description": "An optional formatting pattern for legend labels. Vega uses D3's format pattern."
                                        },
                                        "values": {
                                            "type": "array",
                                            "description": "Explicitly set the visible legend values."
                                        },
                                        "properties": {
                                            "type": "object",
                                            "description": "Optional mark property definitions for custom legend styling. "
                                        },
                                        "shortTimeLabels": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether month names and weekday names should be abbreviated."
                                        }
                                    }
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "value": {
                            "type": "string",
                            "role": "color",
                            "default": "#4682b4",
                            "description": "Color to be used for marks."
                        }
                    }
                },
                "shape": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                }
                            }
                        },
                        "legend": {
                            "default": true,
                            "description": "Properties of a legend or boolean flag for determining whether to show it.",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "orient": {
                                            "type": "string",
                                            "description": "The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\"."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A title for the legend. (Shows field name and its function by default.)"
                                        },
                                        "format": {
                                            "type": "string",
                                            "description": "An optional formatting pattern for legend labels. Vega uses D3's format pattern."
                                        },
                                        "values": {
                                            "type": "array",
                                            "description": "Explicitly set the visible legend values."
                                        },
                                        "properties": {
                                            "type": "object",
                                            "description": "Optional mark property definitions for custom legend styling. "
                                        },
                                        "shortTimeLabels": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether month names and weekday names should be abbreviated."
                                        }
                                    }
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "value": {
                            "type": "string",
                            "enum": [
                                "circle",
                                "square",
                                "cross",
                                "diamond",
                                "triangle-up",
                                "triangle-down"
                            ],
                            "default": "circle",
                            "description": "Mark to be used."
                        }
                    }
                },
                "path": {
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "nominal",
                                        "ordinal",
                                        "quantitative",
                                        "temporal"
                                    ]
                                },
                                "timeUnit": {
                                    "type": "string",
                                    "enum": [
                                        "year",
                                        "month",
                                        "day",
                                        "date",
                                        "hours",
                                        "minutes",
                                        "seconds",
                                        "milliseconds",
                                        "yearmonth",
                                        "yearmonthday",
                                        "yearmonthdate",
                                        "yearday",
                                        "yeardate",
                                        "yearmonthdayhours",
                                        "yearmonthdayhoursminutes",
                                        "hoursminutes",
                                        "hoursminutesseconds",
                                        "minutesseconds",
                                        "secondsmilliseconds"
                                    ],
                                    "supportedTypes": {
                                        "temporal": 1
                                    }
                                },
                                "bin": {
                                    "type": [
                                        "boolean",
                                        "object"
                                    ],
                                    "default": false,
                                    "properties": {
                                        "min": {
                                            "type": "number",
                                            "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                        },
                                        "max": {
                                            "type": "number",
                                            "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                        },
                                        "base": {
                                            "type": "number",
                                            "description": "The number base to use for automatic bin determination (default is base 10)."
                                        },
                                        "step": {
                                            "type": "number",
                                            "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                        },
                                        "steps": {
                                            "type": "array",
                                            "description": "An array of allowable step sizes to choose from."
                                        },
                                        "minstep": {
                                            "type": "number",
                                            "description": "A minimum allowable step size (particularly useful for integer values)."
                                        },
                                        "div": {
                                            "type": "array",
                                            "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                        },
                                        "maxbins": {
                                            "type": "integer",
                                            "minimum": 2,
                                            "description": "Maximum number of bins."
                                        }
                                    },
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                }
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "nominal",
                                            "ordinal",
                                            "quantitative",
                                            "temporal"
                                        ]
                                    },
                                    "timeUnit": {
                                        "type": "string",
                                        "enum": [
                                            "year",
                                            "month",
                                            "day",
                                            "date",
                                            "hours",
                                            "minutes",
                                            "seconds",
                                            "milliseconds",
                                            "yearmonth",
                                            "yearmonthday",
                                            "yearmonthdate",
                                            "yearday",
                                            "yeardate",
                                            "yearmonthdayhours",
                                            "yearmonthdayhoursminutes",
                                            "hoursminutes",
                                            "hoursminutesseconds",
                                            "minutesseconds",
                                            "secondsmilliseconds"
                                        ],
                                        "supportedTypes": {
                                            "temporal": 1
                                        }
                                    },
                                    "bin": {
                                        "type": [
                                            "boolean",
                                            "object"
                                        ],
                                        "default": false,
                                        "properties": {
                                            "min": {
                                                "type": "number",
                                                "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                            },
                                            "max": {
                                                "type": "number",
                                                "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                            },
                                            "base": {
                                                "type": "number",
                                                "description": "The number base to use for automatic bin determination (default is base 10)."
                                            },
                                            "step": {
                                                "type": "number",
                                                "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                            },
                                            "steps": {
                                                "type": "array",
                                                "description": "An array of allowable step sizes to choose from."
                                            },
                                            "minstep": {
                                                "type": "number",
                                                "description": "A minimum allowable step size (particularly useful for integer values)."
                                            },
                                            "div": {
                                                "type": "array",
                                                "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                            },
                                            "maxbins": {
                                                "type": "integer",
                                                "minimum": 2,
                                                "description": "Maximum number of bins."
                                            }
                                        },
                                        "supportedTypes": {
                                            "quantitative": 1
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "text": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                }
                            }
                        },
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "value": {
                            "type": "string",
                            "default": "Abc"
                        }
                    }
                },
                "detail": {
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "nominal",
                                        "ordinal",
                                        "quantitative",
                                        "temporal"
                                    ]
                                },
                                "timeUnit": {
                                    "type": "string",
                                    "enum": [
                                        "year",
                                        "month",
                                        "day",
                                        "date",
                                        "hours",
                                        "minutes",
                                        "seconds",
                                        "milliseconds",
                                        "yearmonth",
                                        "yearmonthday",
                                        "yearmonthdate",
                                        "yearday",
                                        "yeardate",
                                        "yearmonthdayhours",
                                        "yearmonthdayhoursminutes",
                                        "hoursminutes",
                                        "hoursminutesseconds",
                                        "minutesseconds",
                                        "secondsmilliseconds"
                                    ],
                                    "supportedTypes": {
                                        "temporal": 1
                                    }
                                },
                                "bin": {
                                    "type": [
                                        "boolean",
                                        "object"
                                    ],
                                    "default": false,
                                    "properties": {
                                        "min": {
                                            "type": "number",
                                            "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                        },
                                        "max": {
                                            "type": "number",
                                            "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                        },
                                        "base": {
                                            "type": "number",
                                            "description": "The number base to use for automatic bin determination (default is base 10)."
                                        },
                                        "step": {
                                            "type": "number",
                                            "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                        },
                                        "steps": {
                                            "type": "array",
                                            "description": "An array of allowable step sizes to choose from."
                                        },
                                        "minstep": {
                                            "type": "number",
                                            "description": "A minimum allowable step size (particularly useful for integer values)."
                                        },
                                        "div": {
                                            "type": "array",
                                            "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                        },
                                        "maxbins": {
                                            "type": "integer",
                                            "minimum": 2,
                                            "description": "Maximum number of bins."
                                        }
                                    },
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                }
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "nominal",
                                            "ordinal",
                                            "quantitative",
                                            "temporal"
                                        ]
                                    },
                                    "timeUnit": {
                                        "type": "string",
                                        "enum": [
                                            "year",
                                            "month",
                                            "day",
                                            "date",
                                            "hours",
                                            "minutes",
                                            "seconds",
                                            "milliseconds",
                                            "yearmonth",
                                            "yearmonthday",
                                            "yearmonthdate",
                                            "yearday",
                                            "yeardate",
                                            "yearmonthdayhours",
                                            "yearmonthdayhoursminutes",
                                            "hoursminutes",
                                            "hoursminutesseconds",
                                            "minutesseconds",
                                            "secondsmilliseconds"
                                        ],
                                        "supportedTypes": {
                                            "temporal": 1
                                        }
                                    },
                                    "bin": {
                                        "type": [
                                            "boolean",
                                            "object"
                                        ],
                                        "default": false,
                                        "properties": {
                                            "min": {
                                                "type": "number",
                                                "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                            },
                                            "max": {
                                                "type": "number",
                                                "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                            },
                                            "base": {
                                                "type": "number",
                                                "description": "The number base to use for automatic bin determination (default is base 10)."
                                            },
                                            "step": {
                                                "type": "number",
                                                "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                            },
                                            "steps": {
                                                "type": "array",
                                                "description": "An array of allowable step sizes to choose from."
                                            },
                                            "minstep": {
                                                "type": "number",
                                                "description": "A minimum allowable step size (particularly useful for integer values)."
                                            },
                                            "div": {
                                                "type": "array",
                                                "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                            },
                                            "maxbins": {
                                                "type": "integer",
                                                "minimum": 2,
                                                "description": "Maximum number of bins."
                                            }
                                        },
                                        "supportedTypes": {
                                            "quantitative": 1
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "label": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "nominal",
                                "ordinal",
                                "quantitative",
                                "temporal"
                            ]
                        },
                        "timeUnit": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "day",
                                "date",
                                "hours",
                                "minutes",
                                "seconds",
                                "milliseconds",
                                "yearmonth",
                                "yearmonthday",
                                "yearmonthdate",
                                "yearday",
                                "yeardate",
                                "yearmonthdayhours",
                                "yearmonthdayhoursminutes",
                                "hoursminutes",
                                "hoursminutesseconds",
                                "minutesseconds",
                                "secondsmilliseconds"
                            ],
                            "supportedTypes": {
                                "temporal": 1
                            }
                        },
                        "bin": {
                            "type": [
                                "boolean",
                                "object"
                            ],
                            "default": false,
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "The minimum bin value to consider. If unspecified, the minimum value of the specified field is used."
                                },
                                "max": {
                                    "type": "number",
                                    "description": "The maximum bin value to consider. If unspecified, the maximum value of the specified field is used."
                                },
                                "base": {
                                    "type": "number",
                                    "description": "The number base to use for automatic bin determination (default is base 10)."
                                },
                                "step": {
                                    "type": "number",
                                    "description": "An exact step size to use between bins. If provided, options such as maxbins will be ignored."
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "An array of allowable step sizes to choose from."
                                },
                                "minstep": {
                                    "type": "number",
                                    "description": "A minimum allowable step size (particularly useful for integer values)."
                                },
                                "div": {
                                    "type": "array",
                                    "description": "Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints."
                                },
                                "maxbins": {
                                    "type": "integer",
                                    "minimum": 2,
                                    "description": "Maximum number of bins."
                                }
                            },
                            "supportedTypes": {
                                "quantitative": 1
                            }
                        },
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "values",
                                "count",
                                "valid",
                                "missing",
                                "distinct",
                                "sum",
                                "mean",
                                "average",
                                "variance",
                                "variancep",
                                "stdev",
                                "stdevp",
                                "median",
                                "q1",
                                "q3",
                                "modeskew",
                                "min",
                                "max",
                                "argmin",
                                "argmax"
                            ],
                            "supportedEnums": {
                                "quantitative": [
                                    "values",
                                    "count",
                                    "valid",
                                    "missing",
                                    "distinct",
                                    "sum",
                                    "mean",
                                    "average",
                                    "variance",
                                    "variancep",
                                    "stdev",
                                    "stdevp",
                                    "median",
                                    "q1",
                                    "q3",
                                    "modeskew",
                                    "min",
                                    "max",
                                    "argmin",
                                    "argmax"
                                ],
                                "ordinal": [
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "nominal": [],
                                "temporal": [
                                    "mean",
                                    "median",
                                    "min",
                                    "max"
                                ],
                                "": [
                                    "count"
                                ]
                            },
                            "supportedTypes": {
                                "quantitative": 1,
                                "nominal": 1,
                                "ordinal": 1,
                                "temporal": 1,
                                "": 1
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "linear",
                                        "log",
                                        "pow",
                                        "sqrt",
                                        "quantile",
                                        "ordinal"
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1
                                    }
                                },
                                "domain": {
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "description": "The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source."
                                },
                                "range": {
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "description": "The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set."
                                },
                                "round": {
                                    "type": "boolean",
                                    "description": "If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid."
                                },
                                "bandWidth": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "outerPadding": {
                                    "type": "number"
                                },
                                "padding": {
                                    "type": "number",
                                    "description": "Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales)."
                                },
                                "clamp": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If true, values that exceed the data domain are clamped to either the minimum or maximum range value"
                                },
                                "nice": {
                                    "oneOf": [
                                        {
                                            "type": "boolean",
                                            "description": "If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96)."
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "second",
                                                "minute",
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                            ],
                                            "description": "If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\"."
                                        }
                                    ],
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    },
                                    "description": ""
                                },
                                "exponent": {
                                    "type": "number",
                                    "description": "Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored."
                                },
                                "zero": {
                                    "type": "boolean",
                                    "description": "If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.",
                                    "supportedTypes": {
                                        "quantitative": 1,
                                        "temporal": 1
                                    }
                                },
                                "useRawDomain": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Uses the source data range as scale domain instead of aggregated data for aggregate axis. This option does not work with sum or count aggregateas they might have a substantially larger scale range."
                                }
                            }
                        }
                    },
                    "properies": {
                        "sort": {
                            "default": "ascending",
                            "supportedTypes": {
                                "quantitative": 1,
                                "ordinal": 1
                            },
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending",
                                        "unsorted"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "op"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "The field name to aggregate over."
                                        },
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "values",
                                                "count",
                                                "valid",
                                                "missing",
                                                "distinct",
                                                "sum",
                                                "mean",
                                                "average",
                                                "variance",
                                                "variancep",
                                                "stdev",
                                                "stdevp",
                                                "median",
                                                "q1",
                                                "q3",
                                                "modeskew",
                                                "min",
                                                "max",
                                                "argmin",
                                                "argmax"
                                            ],
                                            "description": "The field name to aggregate over."
                                        },
                                        "order": {
                                            "type": "string",
                                            "enum": [
                                                "ascending",
                                                "descending"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "config": {
            "type": "object",
            "properties": {
                "viewport": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The width and height of the on-screen viewport, in pixels. If necessary, clipping and scrolling will be applied."
                },
                "background": {
                    "type": "string",
                    "role": "color",
                    "description": "CSS color property to use as background of visualization. Default is `\"transparent\"`."
                },
                "numberFormat": {
                    "type": "string",
                    "default": "s",
                    "description": "D3 Number format for axis labels and text tables. For example \"s\" for SI units."
                },
                "timeFormat": {
                    "type": "string",
                    "default": "%Y-%m-%d",
                    "description": "Default datetime format for axis and legend labels. The format can be set directly on each axis and legend."
                },
                "textCellWidth": {
                    "type": "integer",
                    "default": 90,
                    "minimum": 0
                },
                "stack": {
                    "type": [
                        "boolean",
                        "object"
                    ],
                    "default": {},
                    "description": "Enable stacking (for bar and area marks only).",
                    "properties": {
                        "sort": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "ascending",
                                        "descending"
                                    ]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ],
                            "description": "Order of the stack. This can be either a string (either \"descending\" or \"ascending\")or a list of fields to determine the order of stack layers.By default, stack uses descending order."
                        },
                        "offset": {
                            "type": "string",
                            "enum": [
                                "zero",
                                "center",
                                "normalize"
                            ]
                        }
                    }
                },
                "cell": {
                    "type": "object",
                    "properties": {
                        "width": {
                            "type": "integer",
                            "default": 200
                        },
                        "height": {
                            "type": "integer",
                            "default": 200
                        },
                        "gridColor": {
                            "type": "string",
                            "role": "color",
                            "default": "#000000"
                        },
                        "gridOpacity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0.4
                        },
                        "gridOffset": {
                            "type": "number",
                            "default": 0
                        },
                        "clip": {
                            "type": "boolean"
                        },
                        "fill": {
                            "type": "string",
                            "role": "color",
                            "default": "rgba(0,0,0,0)"
                        },
                        "fillOpacity": {
                            "type": "number"
                        },
                        "stroke": {
                            "type": "string",
                            "role": "color"
                        },
                        "strokeWidth": {
                            "type": "integer"
                        },
                        "strokeOpacity": {
                            "type": "number"
                        },
                        "strokeDash": {
                            "type": "array"
                        },
                        "strokeDashOffset": {
                            "type": "integer",
                            "description": "The offset (in pixels) into which to begin drawing with the stroke dash array."
                        }
                    }
                },
                "mark": {
                    "type": "object",
                    "properties": {
                        "filled": {
                            "type": "boolean",
                            "description": "Whether the shape's color should be used as fill color instead of stroke color. This is only applicable for \"bar\", \"point\", and \"area\". All marks except \"point\" marks are filled by default."
                        },
                        "sortBy": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ],
                            "description": "Sort layer of marks by a given field or fields."
                        },
                        "fill": {
                            "type": "string",
                            "role": "color"
                        },
                        "fillOpacity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "stroke": {
                            "type": "string",
                            "role": "color"
                        },
                        "strokeOpacity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "opacity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "strokeWidth": {
                            "type": "number",
                            "default": 2,
                            "minimum": 0
                        },
                        "strokeDash": {
                            "type": "array",
                            "description": "An array of alternating stroke, space lengths for creating dashed or dotted lines."
                        },
                        "strokeDashOffset": {
                            "type": "array",
                            "description": "The offset (in pixels) into which to begin drawing with the stroke dash array."
                        },
                        "orient": {
                            "type": "string",
                            "description": "The orientation of a non-stacked bar, area, and line charts.The value is either horizontal (default) or vertical.For area, this property determines the orient property of the Vega output.For line, this property determines the sort order of the points in the line if `config.sortLineBy` is not specified.For stacked charts, this is always determined by the orientation of the stack; therefore explicitly specified value will be ignored."
                        },
                        "interpolate": {
                            "type": "string",
                            "description": "The line interpolation method to use. One of linear, step-before, step-after, basis, basis-open, basis-closed, bundle, cardinal, cardinal-open, cardinal-closed, monotone."
                        },
                        "tension": {
                            "type": "number",
                            "description": "Depending on the interpolation type, sets the tension parameter."
                        },
                        "thickness": {
                            "type": "number",
                            "default": 1,
                            "description": "Thickness of the tick mark."
                        },
                        "align": {
                            "type": "string",
                            "enum": [
                                "left",
                                "right",
                                "center"
                            ],
                            "description": "The horizontal alignment of the text. One of left, right, center."
                        },
                        "angle": {
                            "type": "number",
                            "description": "The rotation angle of the text, in degrees."
                        },
                        "baseline": {
                            "type": "string",
                            "default": "middle",
                            "enum": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "The vertical alignment of the text. One of top, middle, bottom."
                        },
                        "dx": {
                            "type": "number",
                            "description": "The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property."
                        },
                        "dy": {
                            "type": "number",
                            "description": "The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property."
                        },
                        "font": {
                            "type": "string",
                            "role": "font",
                            "description": "The typeface to set the text in (e.g., Helvetica Neue)."
                        },
                        "fontStyle": {
                            "type": "string",
                            "enum": [
                                "normal",
                                "italic"
                            ],
                            "description": "The font style (e.g., italic)."
                        },
                        "fontWeight": {
                            "type": "string",
                            "enum": [
                                "normal",
                                "bold"
                            ],
                            "description": "The font weight (e.g., bold)."
                        },
                        "radius": {
                            "type": "number",
                            "description": "Polar coordinate radial offset, in pixels, of the text label from the origin determined by the x and y properties."
                        },
                        "theta": {
                            "type": "number",
                            "description": "Polar coordinate angle, in radians, of the text label from the origin determined by the x and y properties. Values for theta follow the same convention of arc mark startAngle and endAngle properties: angles are measured in radians, with 0 indicating \"north\"."
                        },
                        "format": {
                            "type": "string",
                            "description": "The formatting pattern for text value. If not defined, this will be determined automatically. "
                        },
                        "shortTimeLabels": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether month names and weekday names should be abbreviated."
                        },
                        "applyColorToBackground": {
                            "type": "boolean",
                            "default": false,
                            "description": "Apply color field to background color instead of the text."
                        }
                    }
                },
                "scene": {
                    "type": "object",
                    "properties": {
                        "fill": {
                            "type": "string",
                            "role": "color"
                        },
                        "fillOpacity": {
                            "type": "number"
                        },
                        "stroke": {
                            "type": "string",
                            "role": "color"
                        },
                        "strokeWidth": {
                            "type": "integer"
                        },
                        "strokeOpacity": {
                            "type": "number"
                        },
                        "strokeDash": {
                            "type": "array"
                        },
                        "strokeDashOffset": {
                            "type": "integer",
                            "description": "The offset (in pixels) into which to begin drawing with the stroke dash array."
                        }
                    }
                }
            }
        }
    }
}
